#this line could tell the 'parser' how to format stuff it prints back out again
#%var%								%cmd%								%cmd_i%								%exact_val%
#										%val%								%val_i%

vsync_swap_interval =					1 ? 0 : -1;

controls = {
	.cam_mouselook_sens =				v2( rad(PI / 1600.0) );
	.cam_roll_vel =						45_deg;
	
	.cam_translate_vel =				2 ?
											v3(0.05) :
											v3(0.2) :
											v3(0.8) :
											v3(2.0);
	.cam_translate_fast_mult =			0 ?
											v3(4) :
											v3(8);
	
	.cam_fov_control_vel =				10_deg;
	.cam_fov_control_mw_vel =			10_deg / 4.0;
	
};

camera = {
	.pos_world =					#	v3(-6.19, +12.07, +1.00)
									$	v3(-2.52595019, +12.076992, +3.88622236)
									$s	v3(-2.52595019, +12.076992, +3.88622236);
	.aer =							#
									$	deg(v3(+24.2249615, +64.9099924, +0))
									$s	deg(v3(+24.2249615, +64.9099924, +0));
	.base_ori =							quat(ident);
	
	.vfov =							#	+100_deg
									$	+74.9999987_deg
									$i	+75.0000_deg;
									
	.clip_near =						1.0/64.0;
	.clip_far =							4096;
	
};

passes = {
	.main_pass_clear_col =				0 ?	srgb(1) :
											col(0.01) :
											col(0.2) :
											srgb(120,175,193);
	
	.bloom_intensity =					1.0;
	
	#.bloom_size = [5] {					1.0/45.0,	1.0/12.0,	1.0/2.5,	1.0,		3.0 };
	.bloom_size = [5] {					1.0/45.0,	1.0/12.0,	1.0/2.0,	2.0,		6.0 };
	.bloom_res_scale = [5] {			1,			2,			3,			4,			5 };
	#.bloom_coeff = [5] {				5.0,		4.0,		1.1,		1.0,		1.0 };
	.bloom_coeff = [5] {				1.0,		1.0,		1.0,		1.0,		1.0 };
	
	.shadow_res =						1024; # desktop 1024, notebook 256
};

env_viewer = {
	.illuminance_res =					32;
	.luminance_res =					512;
	.luminance_prefilter_levels =		8;
	.luminance_prefilter_base_samples =	256;
	
	.cur_humus_indx =					#112
									$	11			
									$s	11;
	## Favorites:
	# 107 			Stairs					Green Djungle Temple Stairs			
	# 13 			CoitTower2				
	# 112			SwedishRoyalCastle		lots of little streetlights			
	# 16			DallasW					hotel room							
	# 17			Earth					
	# 23			Footballfield2			Nice glass reflections				
	
	.cur_sibl_indx =				#	28
									$	43			
									$s	43;
	## Favorites:
	# 30			PaperMill_Ruins_E		
									
	.sibl =							$s	false;
};

saved_cameras =				$s [10] {
	{ v3(+0, +0, +0), deg(v3(+0, +90.0000025, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(-5.34299994, +10.3100004, +4.26499987), deg(v3(+222.999994, +94.7199979, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(-3.0150001, +14.79, +2.47900009), deg(v3(+323.099995, +61.419998, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(-8.03499985, +11.8599997, +2.74600005), deg(v3(+226.900004, +112.8, +0)), quat(v3(+0, +0, +0), +1), +31.470001_deg, +0.0625, +4096 },
	{ v3(-8.98700047, +15.0200005, +3.87899995), deg(v3(+188.299996, +85.5000007, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(-32.9799995, -0.916800022, +3.0769999), deg(v3(+121.600002, +85.5000007, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(-39.5200005, -7.26499987, +2.39499998), deg(v3(+56.6999992, +81.6699994, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(-41.1599998, -5.99800014, +1.875), deg(v3(+46.7999986, +74.2500029, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(+0, +0, +0), deg(v3(+0, +90.0000025, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 },
	{ v3(+0, +0, +0), deg(v3(+0, +90.0000025, +0)), quat(v3(+0, +0, +0), +1), +74.9999987_deg, +0.0625, +4096 }
};

### Scene

{#
	.cube_rot_vel =						deg(0 ? +20 : 0);
	.sphere_rot_vel =					-6_deg;
#}

material_showcase_grid_steps =			uv2(7, 3);
#material_showcase_grid_mat =			m2(	+1, 0,
#											 0,-1 ); # !!!!!!! BROKEN because var_file.hpp has not implemented matrix handling yet

### Assets
{# shaders = [] {
	#???
}; #}

materials = [] { # enum map
	#struct is  v3:albedo 	flt:metallic	flt:roughness	flt:IOR=1.5
	#%name% # Autogenerated enum-map names
	{# MAT_IDENTITY			#}			{ col(1),					1.0,	1.0 }, # since everything acts as a multipler for optional texture values, this makes it so that the material is controlled with textures (NOTE: IOR is default)
	
	{# MAT_WHITENESS		#}			{ col(0.920, 0.920, 0.920),	0.10,	0.50 }, # NOTE: default values are still not implemented, so if IOR is ever set here it will override the default permanetly
	{# MAT_TERRAIN			#}			{ col(0.644, 0.770, 0.476),	0.00,	0.85 };
	{# MAT_GLASS			#}			{ col(1.000, 1.000, 1.000),	0.00,	0.08 },
	{# MAT_PLASTIC			#}			{ col(0.004, 0.005, 0.005),	0.00,	0.24 },
	{# MAT_SHINY_PLATINUM	#}			{ col(0.300, 0.307, 0.307),	1.00,	0.08 },
	{# MAT_GRASS			#}			{ col(1),					0.00,	0.55 },
	{# MAT_RUSTY_METAL		#}			{ col(1),					0.50,	0.60 },
	{# MAT_BLOTCHY_METAL	#}			{ col(1),					0.95,	0.34 },
	{# MAT_GRIPPED_METAL	#}			{ col(1),					0.95,	0.34 },
	{# MAT_DIRT				#}			{ col(1),					0.00,	0.70 },
	{# MAT_TREE_BARK		#}			{ col(0.600, 0.513, 0.435), 0.00,	0.85 },
	{# MAT_TREE_CUTS		#}			{ col(1.000, 0.855, 0.725), 0.00,	0.70 },
	{# MAT_TREE_BLOSSOMS	#}			{ srgb(213,146,222),		0.00,	0.88 },
	{# MAT_OBELISK			#}			{ col(1),					0.35,	0.70 },
	{# MAT_MARBLE			#}			{ col(1),					0.0,	0.30 },
	{# MAT_ROUGH_MARBLE		#}			{ col(1),					0.0,	0.80 },
	{# MAT_WOODEN_BEAM		#}			{ col(0.898, 0.741, 0.698),	0.0,	0.70 },
	{# MAT_WOODEN_BEAM_CUTS	#}			{ col(0.878, 0.729, 0.690),	0.0,	0.60 },
	{# MAT_LIGHTBULB		#}			{ col(0.400, 0.400, 0.400),	0.20,	0.08 },
	
	{# MAT_SHOW_PLASTIC		#}			{ srgb(236,44,130),			0.0,	0.24,	1.419 }, # IOR=1.419 -> F0=0.03
	{# MAT_SHOW_GLASS		#}			{ srgb(0.04,0.07,0.02),		0.0,	0.08,	1.419 }, # IOR=1.419 -> F0=0.03
	{# MAT_SHOW_PLASIC_H	#}			{ srgb(215,160,41),			0.0,	0.80,	1.576 }, # IOR=1.576 -> F0=0.05
	{# MAT_SHOW_RUBY		#}			{ srgb(226,14,37),			0.0,	0.05,	1.789 }, # IOR=1.789 -> F0=0.08
	{# MAT_SHOW_DIAMOND		#}			{ srgb(101,176,239),		0.0,	0.03,	2.403 }, # IOR=2.403 -> F0=0.17
	{# MAT_SHOW_IRON		#}			{ col(0.56, 0.57, 0.58),	1.0,	0.18 };
	{# MAT_SHOW_COPPER		#}			{ col(0.95, 0.64, 0.54),	1.0,	0.38 },
	{# MAT_SHOW_GOLD		#}			{ col(1.00, 0.71, 0.29),	1.0,	0.28 },
	{# MAT_SHOW_ALU			#}			{ col(0.91, 0.92, 0.92),	1.0,	0.24 },
	{# MAT_SHOW_SILVER		#}			{ col(0.95, 0.93, 0.88),	1.0,	0.09 },
	
};

tex.names = [] {
	#%name%
	
	{# TEX_MAT_ROUGHNESS							#}	"ugly_roughness.linear_r",
	{# TEX_GRASS									#}	"grass_00",
	{# TEX_TERRAIN_CUBE_DIFFUSE						#}	"terrain_cube_diffuse",
	{# TEX_TERRAIN_SPHERE_DIFFUSE					#}	"terrain_sphere_diffuse",
	{# TEX_TERRAIN_TREE_DIFFUSE						#}	"terrain_tree_diffuse",
	{# TEX_TERRAIN_TREE_CUTS_DIFFUSE				#}	"terrain_tree_cuts_diffuse",
	{# TEX_TERRAIN_OBELISK_DIFFUSE					#}	"obelisk_diffuse",
	{# TEX_STRUCTURE_WALLS							#}	"structure_walls",
	{# TEX_STRUCTURE_GROUND							#}	"structure_ground",
	{# TEX_METAL_GRIPPED_DIFFUSE					#}	"metal_gripped_diffuse",
	{# TEX_METAL_RUSTY_02							#}	"metal_rusty_02",
	{# TEX_MARBLE									#}	"marble",
	{# TEX_WOODEN_BEAM								#}	"wooden_beam",
	
	{# TEX_DIF_BRICK_00								#}	"brick_00_diff",
	{# TEX_NRM_BRICK_00								#}	"brick_00.nrm",
	{# TEX_DIF_BRICK_01								#}	"brick_01_diff",
	{# TEX_NRM_BRICK_01								#}	"brick_01.nrm",
	
	{# TEX_NANOSUIT_BODY_DIFF_EMISS					#}	"nano_suit/nanosuit_body.sbgr_a",
	{# TEX_NANOSUIT_BODY_SPEC_ROUGH					#}	"nano_suit/nanosuit_body_spec.sbgr_a",
	{# TEX_NANOSUIT_BODY_NORM						#}	"nano_suit/nanosuit_body.nrm",
	{# TEX_NANOSUIT_NECK_DIFF						#}	"nano_suit/nanosuit_neck",
	{# TEX_NANOSUIT_NECK_SPEC_ROUGH					#}	"nano_suit/nanosuit_neck_spec.sbgr_a",
	{# TEX_NANOSUIT_NECK_NORM						#}	"nano_suit/nanosuit_neck.nrm",
	{# TEX_NANOSUIT_HELMET_DIFF_EMISS				#}	"nano_suit/nanosuit_helmet.sbgr_a",
	{# TEX_NANOSUIT_HELMET_SPEC_ROUGH				#}	"nano_suit/nanosuit_helmet_spec.sbgr_a",
	{# TEX_NANOSUIT_HELMET_NORM						#}	"nano_suit/nanosuit_helmet.nrm",
	
	{# TEX_NORM_TEST_00								#}	"norm_test/norm_00.nrm",
	
	{# TEX_CERBERUS_ALBEDO							#}	"cerberus/Textures/Cerberus_A",
	{# TEX_CERBERUS_NORMAL							#}	"cerberus/Textures/Cerberus_N.nrm",
	{# TEX_CERBERUS_METALLIC						#}	"cerberus/Textures/Cerberus_M.linear",
	{# TEX_CERBERUS_ROUGHNESS						#}	"cerberus/Textures/Cerberus_R.linear",
	
	{# TEX_PG_DAVID_ALBEDO							#}	"photogr/david_albedo",
	{# TEX_PG_DAVID_NORMAL							#}	"photogr/david.nrm",
	
	{# TEX_PG_STOOL_ALB								#}	"photogr/stool.2048.alb",
	{# TEX_PG_STOOL_NRM_256							#}	"photogr/stool.256.nrm",
	{# TEX_PG_STOOL_NRM_512							#}	"photogr/stool.512.nrm",
	{# TEX_PG_STOOL_NRM_1024						#}	"photogr/stool.1024.nrm",
	{# TEX_PG_STOOL_NRM_2048						#}	"photogr/stool.2048.nrm",
	{# TEX_PG_DAVID3_ALB							#}	"photogr/david.4096.alb",
	{# TEX_PG_DAVID3_NRM							#}	"photogr/david.4096.nrm",

};

^EOF_MARKER^
